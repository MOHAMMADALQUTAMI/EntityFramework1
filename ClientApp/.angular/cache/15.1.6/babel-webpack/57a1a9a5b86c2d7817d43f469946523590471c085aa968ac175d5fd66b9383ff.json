{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nfunction FetchDataComponent_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FetchDataComponent_table_5_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const forecast_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(forecast_r3.date);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(forecast_r3.temperatureC);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(forecast_r3.temperatureF);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(forecast_r3.summary);\n  }\n}\nfunction FetchDataComponent_table_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 4)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Temp. (C)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Temp. (F)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Summary\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"tbody\");\n    i0.ɵɵtemplate(12, FetchDataComponent_table_5_tr_12_Template, 9, 4, \"tr\", 5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.forecasts);\n  }\n}\nexport class FetchDataComponent {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.forecasts = [];\n    this.employees = [];\n    // http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\n    //   this.forecasts = result;\n    // }, error => console.error(error));\n  }\n\n  getEmployee() {\n    this.http.get(this.baseUrl + 'employee/Get').subscribe(result => {\n      this.employees = result;\n    }, error => console.error(error));\n  }\n  creatEmployee() {\n    const employee = {\n      id: 0,\n      name: \"new Name\"\n    };\n    this.http.post(this.baseUrl + 'employee/create', employee).subscribe(result => {\n      this.employees = result;\n      this.getEmployee();\n    }, error => console.error(error));\n  }\n}\nFetchDataComponent.ɵfac = function FetchDataComponent_Factory(t) {\n  return new (t || FetchDataComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nFetchDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchDataComponent,\n  selectors: [[\"app-fetch-data\"]],\n  decls: 15,\n  vars: 3,\n  consts: [[\"id\", \"tableLabel\"], [4, \"ngIf\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"type\", \"button\", \"value\", \"Add employee\", 3, \"click\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function FetchDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Weather forecast\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"This component demonstrates fetching data from the server.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, FetchDataComponent_p_4_Template, 3, 0, \"p\", 1);\n      i0.ɵɵtemplate(5, FetchDataComponent_table_5_Template, 13, 1, \"table\", 2);\n      i0.ɵɵelement(6, \"br\");\n      i0.ɵɵelementStart(7, \"input\", 3);\n      i0.ɵɵlistener(\"click\", function FetchDataComponent_Template_input_click_7_listener() {\n        return ctx.creatEmployee();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 3);\n      i0.ɵɵlistener(\"click\", function FetchDataComponent_Template_input_click_8_listener() {\n        return ctx.getEmployee();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"br\");\n      i0.ɵɵelementStart(10, \"ul\")(11, \"li\");\n      i0.ɵɵtext(12, \"*ngFor=\\\"let employee of employees\\\" \");\n      i0.ɵɵelementStart(13, \"span\");\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", !(ctx.forecasts == null ? null : ctx.forecasts.length));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.forecasts.length);\n      i0.ɵɵadvance(9);\n      i0.ɵɵtextInterpolate(ctx.employee.Name);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;IAIAA,yBAA8B;IAAIA,0BAAU;IAAAA,iBAAK;;;;;IAY7CA,0BAAuC;IACjCA,YAAmB;IAAAA,iBAAK;IAC5BA,0BAAI;IAAAA,YAA2B;IAAAA,iBAAK;IACpCA,0BAAI;IAAAA,YAA2B;IAAAA,iBAAK;IACpCA,0BAAI;IAAAA,YAAsB;IAAAA,iBAAK;;;;IAH3BA,eAAmB;IAAnBA,sCAAmB;IACnBA,eAA2B;IAA3BA,8CAA2B;IAC3BA,eAA2B;IAA3BA,8CAA2B;IAC3BA,eAAsB;IAAtBA,yCAAsB;;;;;IAdhCA,gCAAyF;IAG/EA,oBAAI;IAAAA,iBAAK;IACbA,0BAAI;IAAAA,yBAAS;IAAAA,iBAAK;IAClBA,0BAAI;IAAAA,yBAAS;IAAAA,iBAAK;IAClBA,0BAAI;IAAAA,wBAAO;IAAAA,iBAAK;IAGpBA,8BAAO;IACLA,2EAKK;IACPA,iBAAQ;;;;IANmBA,gBAAY;IAAZA,0CAAY;;;ACTzC,OAAM,MAAOC,kBAAkB;EAK7BC,YAAqBC,IAAgB,EAA6BC,OAAe;IAA5D,SAAI,GAAJD,IAAI;IAAyC,YAAO,GAAPC,OAAO;IAJlE,cAAS,GAAe,EAAE;IACjC,cAAS,GAAe,EAAE;IAIxB;IACA;IACA;EACF;;EACAC,WAAW;IACT,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa,IAAI,CAACF,OAAO,GAAG,cAAc,CAAC,CAACG,SAAS,CAACC,MAAM,IAAG;MAC1E,IAAI,CAACC,SAAS,GAAGD,MAAM;IACzB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;EACAE,aAAa;IACX,MAAMC,QAAQ,GAAG;MACfC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE;KACP;IACD,IAAI,CAACZ,IAAI,CAACa,IAAI,CAAa,IAAI,CAACZ,OAAO,GAAG,iBAAiB,EAACS,QAAQ,CAAC,CAACN,SAAS,CAACC,MAAM,IAAG;MACvF,IAAI,CAACC,SAAS,GAAGD,MAAM;MACvB,IAAI,CAACH,WAAW,EAAE;IAEpB,CAAC,EAAEK,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;;AAzBWT,kBAAkB;mBAAlBA,kBAAkB,4DAKkB,UAAU;AAAA;AAL9CA,kBAAkB;QAAlBA,kBAAkB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDP/BrB,6BAAoB;MAAAA,gCAAgB;MAAAA,iBAAK;MAEzCA,yBAAG;MAAAA,0EAA0D;MAAAA,iBAAI;MAEjEA,+DAAqD;MAErDA,wEAiBQ;MACRA,qBAAI;MACJA,gCAAoE;MAA1BA;QAAA,OAASsB,mBAAe;MAAA,EAAC;MAAnEtB,iBAAoE;MACpEA,gCAAkE;MAAxBA;QAAA,OAASsB,iBAAa;MAAA,EAAC;MAAjEtB,iBAAkE;MAElEA,qBAAI;MACJA,2BAAI;MACEA,sDACJ;MAAAA,6BAAM;MAAAA,aAAiB;MAAAA,iBAAO;;;MA3B5BA,eAAwB;MAAxBA,6EAAwB;MAEqCA,eAAsB;MAAtBA,2CAAsB;MAyB/EA,eAAiB;MAAjBA,uCAAiB","names":["i0","FetchDataComponent","constructor","http","baseUrl","getEmployee","get","subscribe","result","employees","error","console","creatEmployee","employee","id","name","post","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\EF\\EntityFramework\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.html","D:\\EF\\EntityFramework\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.ts"],"sourcesContent":["<h1 id=\"tableLabel\">Weather forecast</h1>\r\n\r\n<p>This component demonstrates fetching data from the server.</p>\r\n\r\n<p *ngIf=\"!forecasts?.length\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"forecasts.length\">\r\n  <thead>\r\n    <tr>\r\n      <th>Date</th>\r\n      <th>Temp. (C)</th>\r\n      <th>Temp. (F)</th>\r\n      <th>Summary</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let forecast of forecasts\">\r\n      <td>{{ forecast.date }}</td>\r\n      <td>{{ forecast.temperatureC }}</td>\r\n      <td>{{ forecast.temperatureF }}</td>\r\n      <td>{{ forecast.summary }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n<br>\r\n<input type=\"button\" value=\"Add employee\" (click)=\"creatEmployee()\">\r\n<input type=\"button\" value=\"Add employee\" (click)=\"getEmployee()\">\r\n\r\n<br>\r\n<ul>\r\n  <li>*ngFor=\"let employee of employees\"\r\n  <span>{{employee.Name}}</span>\r\n</li>\r\n</ul>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public forecasts: Employee[] = [];\r\n  employees: Employee[] = [];\r\nemployee: any;\r\n\r\n  constructor( private http: HttpClient, @Inject('BASE_URL')private baseUrl: string) {\r\n    // http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n    //   this.forecasts = result;\r\n    // }, error => console.error(error));\r\n  }\r\n  getEmployee(){\r\n    this.http.get<Employee[]>(this.baseUrl + 'employee/Get').subscribe(result => {\r\n      this.employees = result;\r\n    }, error => console.error(error));\r\n  }\r\n  creatEmployee(){\r\n    const employee = {\r\n      id: 0,\r\n      name: \"new Name\"\r\n    };\r\n    this.http.post<Employee[]>(this.baseUrl + 'employee/create',employee).subscribe(result => {\r\n      this.employees = result;\r\n      this.getEmployee();\r\n\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\n// interface WeatherForecast {\r\n//   date: string;\r\n//   temperatureC: number;\r\n//   temperatureF: number;\r\n//   summary: string;\r\n// }\r\ninterface Employee {\r\n  id: number;\r\n  name: string;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}